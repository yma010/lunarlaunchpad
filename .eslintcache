[{"E:\\Projects\\lunarlaunchpad\\src\\index.js":"1","E:\\Projects\\lunarlaunchpad\\src\\reportWebVitals.js":"2","E:\\Projects\\lunarlaunchpad\\src\\App.js":"3","E:\\Projects\\lunarlaunchpad\\src\\components\\AlpacaConnectButton.jsx":"4","E:\\Projects\\lunarlaunchpad\\src\\config\\Firebase\\FirebaseContext.js":"5","E:\\Projects\\lunarlaunchpad\\src\\config\\Firebase\\firebase.js":"6","E:\\Projects\\lunarlaunchpad\\src\\redux\\root.js":"7","E:\\Projects\\lunarlaunchpad\\src\\session\\AuthContext.js":"8","E:\\Projects\\lunarlaunchpad\\src\\session\\ManageAuthReducer.js":"9","E:\\Projects\\lunarlaunchpad\\src\\session\\AuthenticatedRoute.js":"10","E:\\Projects\\lunarlaunchpad\\src\\pages\\Dashboard.jsx":"11","E:\\Projects\\lunarlaunchpad\\src\\pages\\Landing.jsx":"12"},{"size":665,"mtime":1616115665581,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1615311626479,"results":"15","hashOfConfig":"14"},{"size":426,"mtime":1616116666818,"results":"16","hashOfConfig":"14"},{"size":2972,"mtime":1616112962362,"results":"17","hashOfConfig":"14"},{"size":297,"mtime":1616113148916,"results":"18","hashOfConfig":"14"},{"size":869,"mtime":1615311626478,"results":"19","hashOfConfig":"14"},{"size":77,"mtime":1616112641536,"results":"20","hashOfConfig":"14"},{"size":1600,"mtime":1616112952101,"results":"21","hashOfConfig":"14"},{"size":1081,"mtime":1616112957542,"results":"22","hashOfConfig":"14"},{"size":654,"mtime":1616112955400,"results":"23","hashOfConfig":"14"},{"size":891,"mtime":1616116683676,"results":"24","hashOfConfig":"14"},{"size":240,"mtime":1616116675697,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gneckw",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Projects\\lunarlaunchpad\\src\\index.js",[],"E:\\Projects\\lunarlaunchpad\\src\\reportWebVitals.js",[],["52","53"],"E:\\Projects\\lunarlaunchpad\\src\\App.js",[],"E:\\Projects\\lunarlaunchpad\\src\\components\\AlpacaConnectButton.jsx",["54","55","56"],"import { useContext, useState } from 'react';\nimport { FirebaseContext } from '../config/Firebase/FirebaseContext';\nimport { AuthContext } from '../session/AuthContext';\nimport { randomBytes } from 'crypto';\n\nconst client_id = process.env.REACT_APP_ALPACA_CLIENT;\nconst redirect_uri = encodeURIComponent('http://localhost:3000/');\n\nexport const AlpacaConnectButton = ({ props }) => {\n    const firebase = useContext(FirebaseContext);\n    const { actions } = useContext(AuthContext);\n    const [ error, setError ] = useState({});\n    const [ loading, setLoading ] = useState(false);\n\n    const connectToAlpaca = async (e) => {\n        setLoading(true);\n\n        //Change to false for deployment\n        const dev = true;\n        const random_string = randomBytes(20).toString('hex');\n        const codeURI =\n            `https://app.alpaca.markets/oauth/authorize?` +\n            `response_type=code&` +\n            `client_id=${client_id}&` +\n            `redirect_uri=${redirect_uri}&` +\n            `state=${random_string}&` +\n            `scope=data`\n        \n            try {\n                const { code, state } = await openAlpacaPopup(codeURI)\n                if (!requestIsValid(random_string, state)) {\n                    throw new Error('Alpaca Authentication Invalid')\n                }\n                const getAlpacaAuthorization = firebase.functions.httpsCallable('getAlpacaAuthorization');\n                const { data } = await getAlpacaAuthorization({ code, dev})\n                await actions.login(data);\n                \n                props.history.push('/dashboard')\n                console.log(state);\n            } catch (e) {\n                const error = {};\n                error.message = e.message;\n                console.log(error);\n            }\n    }\n\n    const requestIsValid = (init_state, returned_state) => (init_state === returned_state);\n\n    const openAlpacaPopup = (uri) => {\n        return new Promise((resolve, reject) => {\n            const authWindow = window.open(uri);\n            let snippet = uri | null;\n\n            const interval = setInterval(async () => {\n                try {\n                    snippet = authWindow && authWindow.location && authWindow.location.search\n                } catch (e) {\n                    if (snippet) {\n                        const rawCode = snippet.substring(1);\n                        const parsedCode = JSON.parse('{\"' + rawCode.replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}',\n                            function (key, value) {\n                                return key === \"\" ? value : decodeURIComponent(value)\n                            });\n                        authWindow.close();\n                        resolve(parsedCode);\n                        clearInterval(interval)\n                    }\n                }\n            }, 100);\n        })\n    }\n\n    return (\n        <button onClick={connectToAlpaca}>\n            Connect To Alpaca\n        </button>\n    )\n}","E:\\Projects\\lunarlaunchpad\\src\\config\\Firebase\\FirebaseContext.js",[],"E:\\Projects\\lunarlaunchpad\\src\\config\\Firebase\\firebase.js",[],"E:\\Projects\\lunarlaunchpad\\src\\redux\\root.js",[],"E:\\Projects\\lunarlaunchpad\\src\\session\\AuthContext.js",[],"E:\\Projects\\lunarlaunchpad\\src\\session\\ManageAuthReducer.js",[],"E:\\Projects\\lunarlaunchpad\\src\\session\\AuthenticatedRoute.js",[],"E:\\Projects\\lunarlaunchpad\\src\\pages\\Dashboard.jsx",[],"E:\\Projects\\lunarlaunchpad\\src\\pages\\Landing.jsx",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":12,"column":13,"nodeType":"63","messageId":"64","endLine":12,"endColumn":18},{"ruleId":"61","severity":1,"message":"65","line":12,"column":20,"nodeType":"63","messageId":"64","endLine":12,"endColumn":28},{"ruleId":"61","severity":1,"message":"66","line":13,"column":13,"nodeType":"63","messageId":"64","endLine":13,"endColumn":20},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'setError' is assigned a value but never used.","'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]